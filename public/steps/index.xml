<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steps on Selenium Compose</title>
    <link>http://localhost:1313/steps/</link>
    <description>Recent content in Steps on Selenium Compose</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://localhost:1313/steps/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Alert</title>
      <link>http://localhost:1313/steps/alert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/alert/</guid>
      <description>Before accepting or declining alert waits until an alert popup has appeared on the current page. If one has not appeared after the timeout has exceeded the scenario will fail.
Properties    Name Description Type Required     accept Flag specifying whether accept or decline the current alert bool false   timeout Waiting timeout until an alert has appeared on the current page Duration false    Syntax alert accepts a string or a map of values.</description>
    </item>
    
    <item>
      <title>Capture</title>
      <link>http://localhost:1313/steps/capture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/capture/</guid>
      <description>Properties    Name Description Type Required     name Screenshot name string false   path Path to save the screen shot string false    Syntax capture accepts a string or a map of values
Inline Use inline syntax to simply capture a screenshot and save it in output dir, which, is configured with --outdir flag
- capture: &amp;lt;string&amp;gt; | $capture_name  Mapping Use mapping syntax to save the captured image in a custom path</description>
    </item>
    
    <item>
      <title>Clear</title>
      <link>http://localhost:1313/steps/clear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/clear/</guid>
      <description>clear waits until at least one WebElement is present in the DOM to clear its value unless ignore_presence has been set to true.
 Avoid using ignore_presence property unless you really have to. If no WebElement is present the scenario will not fail and continue next steps execution, which may cause confusion in the expected behaviour of the composed scenario.
  If found WebElement(s) is a text entry element, clear will clear the value.</description>
    </item>
    
    <item>
      <title>Click</title>
      <link>http://localhost:1313/steps/click/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/click/</guid>
      <description>If a WebElement location is given click waits until the WebElement become clickable before performing click unless ignore_clickable has been set true
 Avoid using ignore_clickable property unless you really have to. Each WebElement has to be checked if it is clickable before performing click on it.
If the flag has been set to true and the WebElement is not present in the DOM or is not clickable the scenario will fail which may cause confusion.</description>
    </item>
    
    <item>
      <title>Close</title>
      <link>http://localhost:1313/steps/close/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/close/</guid>
      <description>close waits until a browser has been matched to close it. All comparisons are case-sensitive for title and case-insensitive for url.
 Only one window can be closed at a time, thus, if multiple windows are matched to the provided conditions the scenario will fail, therefore, be more precise in the conditions to target the right window to close
  There are 3 ways to match a browser</description>
    </item>
    
    <item>
      <title>HTTP Request</title>
      <link>http://localhost:1313/steps/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/http/</guid>
      <description>Sometime you may need to do some cleanup or preparations on the server before a scenario execution. http provides a simple and easy-to-use way to fulfill this task
Properties    Name Description Type Required     url HTTP Request url string true   method HTTP Method string false   headers HTTP Request headers map false   content_type HTTP Request content type string false   data HTTP Request data any false    Syntax http accepts a string or a map of values</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>http://localhost:1313/steps/js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/js/</guid>
      <description>Javascript execution is only synchronous at this time (to be changed). There are two ways to execute javascript code
 Provide a price of code Provide a file relative or absolute path with javascript code inside  Properties    Name Description Type Required     content Javascript to execute or javascript file path string true   args Arguments to the script array false    Syntax js accepts a string or a map of values</description>
    </item>
    
    <item>
      <title>Key Press &amp; Release</title>
      <link>http://localhost:1313/steps/key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/key/</guid>
      <description>Syntax - press: &amp;lt;string&amp;gt;  - release: &amp;lt;string&amp;gt;  Usage - press: @ctrl a - release: @ctrl a  Special Keys The list of special keys to use
   Name Description     @cancel Cancel Key   @help Help Key   @backspace Backspace Key   @tab Tab Key   @clear Clear Key   @return Return Key   @enter Enter Key   @shift Shift Key   @control Control Key   @ctrl Control Key   @ctl Control Key   @alt Alt Key   @pause Pause Key   @escape Escape Key   @space Space Key   @pageup PageUp Key   @pagedown selenium.</description>
    </item>
    
    <item>
      <title>Maximize</title>
      <link>http://localhost:1313/steps/maximize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/maximize/</guid>
      <description>maximize waits until a browser has been matched to maximize it. All comparisons are case-sensitive for title and case-insensitive for url.
 Only one window can be maximized at a time, thus, if multiple windows are matched to the provided conditions the scenario will fail, therefore, be more precise in the conditions to target the right window to maximize
  There are 3 ways to match a browser</description>
    </item>
    
    <item>
      <title>Mouse</title>
      <link>http://localhost:1313/steps/mouse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/mouse/</guid>
      <description>Causes the left mouse button to be held down
- mouse: down  Causes the left mouse button to be released
- mouse: up  </description>
    </item>
    
    <item>
      <title>Move To</title>
      <link>http://localhost:1313/steps/move_to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/move_to/</guid>
      <description>If the element is not visible, it will be scrolled into view. move_to can be performed only on one element at a time, thus, be more precise in your selection to target the right element or use resolve to specify to which found element resolve. If x and y not given the mouse will be moved to the center coordinates of the WebElement
Properties    Name Description Type Required     location Web Element location string true   selector Methods by which to find elements string false   resolve Resolver string false   x The relative X coordinate from the center of a WebElement int false   y The relative Y coordinate from the center of element int false    Syntax move_to accepts a string or a map of values</description>
    </item>
    
    <item>
      <title>Navigation</title>
      <link>http://localhost:1313/steps/nav/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/nav/</guid>
      <description> Back Back moves backward in history
- nav: back  Forward Forward moves forward in history
- nav: forward  Refresh Refresh refreshes the page
- nav: refresh  </description>
    </item>
    
    <item>
      <title>Open</title>
      <link>http://localhost:1313/steps/open/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/open/</guid>
      <description>This is done using an HTTP GET operation and the method will block until the load is complete. This will follow redirects issued either by the server or as a meta-redirect from within the returned HTML
Properties    Name Description Type Required     url Web page url to load string true   timeout Wait timeout until the page has been loaded Duration false    Syntax open accepts a string or a map of values</description>
    </item>
    
    <item>
      <title>Pause</title>
      <link>http://localhost:1313/steps/pause/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/pause/</guid>
      <description> Syntax - pause: &amp;lt;Duration&amp;gt; | $duration  Milliseconds Wait 300 milliseconds before executing next action
- pause: 300ms  Seconds Wait 2 seconds before executing next action
- pause: 2s  Minutes Wait 3 minutes before executing next action
- pause: 3m  </description>
    </item>
    
    <item>
      <title>Resize</title>
      <link>http://localhost:1313/steps/resize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/resize/</guid>
      <description>resize waits until a browser has been matched to resize it to the given sizes. All comparisons are case-sensitive for title and case-insensitive for url.
 Only one window can be resized at a time, thus, if multiple windows are matched to the provided conditions the scenario will fail, therefore, be more precise in the conditions to target the right window to resize
  There are 3 ways to match a browser</description>
    </item>
    
    <item>
      <title>Submit</title>
      <link>http://localhost:1313/steps/submit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/submit/</guid>
      <description>submit waits until a WebElement is present to submit
 Only one form can be submitted at a time, thus, be more precise in your selection to target the right form or use resolve to specify to which button or form resolve
   Avoid using ignore_clickable property unless you really have to. Before submitting the WebElement is has to be present in the DOM.
If the flag has been set to true and the WebElement is not present in the DOM or is not clickable the scenario will fail which may cause confusion.</description>
    </item>
    
    <item>
      <title>Switch</title>
      <link>http://localhost:1313/steps/switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/switch/</guid>
      <description>switch waits until a browser has been matched to switch to it. All comparisons are case-sensitive for title and case-insensitive for url.
 Only one window can be switched at a time, thus, if multiple windows are matched to the provided conditions the scenario will fail, therefore, be more precise in the conditions to target the right window to switch
  There are 3 ways to match a browser</description>
    </item>
    
    <item>
      <title>Type</title>
      <link>http://localhost:1313/steps/type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/steps/type/</guid>
      <description>Properties    Name Description Type Required     location Web Element location string true   selector Methods by which to find elements string false   resolve Resolver string false   timeout The amount of time to wait until Web Element becomes clickable Duration false   ignore_presence Do not wait until the location WebElement is present bool false    Syntax type accepts a string or a map of values</description>
    </item>
    
  </channel>
</rss>